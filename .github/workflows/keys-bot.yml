name: Build and Deploy keys-bot

run-name: 'Build and Deploy keys-bot'

on:
    workflow_dispatch:
        inputs:
            environment:
                description: 'Target environment'
                required: true
                default: t
                type: choice
                options:
                    - turkey
                    - us
                    - de
                    - neth
                    - fin

jobs:
    build_and_deploy:
        runs-on: ubuntu-latest
        environment: ${{ inputs.environment }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node
              uses: actions/setup-node@v4
              with:
                  node-version: 22

            - name: Install dependencies
              run: npm ci
              working-directory: apps/keys

            - name: Build
              run: npm run build
              working-directory: apps/keys

            - name: Archive dist
              run: tar -czf dist.tar.gz dist
              working-directory: apps/keys

            - name: Upload to server
              uses: appleboy/scp-action@v1
              with:
                  host: ${{ secrets.VPN_SERVER_HOST }}
                  username: ${{ secrets.VPN_SERVER_USERNAME }}
                  key: ${{ secrets.VPN_SERVER_SSH_KEY }}
                  source: ./apps/keys/dist.tar.gz
                  target: ${{ secrets.VPN_SERVER_APP_DIRECTORY }}

            - name: Deploy via SSH
              uses: appleboy/ssh-action@v1.2.2
              with:
                  host: ${{ secrets.VPN_SERVER_HOST }}
                  username: ${{ secrets.VPN_SERVER_USERNAME }}
                  key: ${{ secrets.VPN_SERVER_SSH_KEY }}
                  script: |
                      cd ${{ secrets.VPN_SERVER_APP_DIRECTORY }}/apps/keys
                      git pull
                      rm -rf dist
                      tar -xzf dist.tar.gz
                      rm dist.tar.gz
                      docker-compose build --no-cache app
                      docker-compose up -d app
